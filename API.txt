SiseTV API:
All requests start with /api

GET /getUser
    Gets the currently logged in user
	returns:
		{
			data(User object. See below for format)
		}
POST /setSlides
	Sets the user's slides
	parameters:
		slides: Array of slides. See below for format.
	returns
		{
			data(Array of the user's slides)
		}
POST /addSlide
    Add a slide to the user's slides. Must be a multipart form upload of the file to be added as a slide
    parameters:
        data:
            A slide object without 'name'. The name will be derived from the uploaded file. See below for format.
        user:
            OPTIONAL ADMIN-ONLY
            If provided, the slide will be added to the user with the provided username instead.
    returns
        {
            data(Array of the user's slides)
        }

POST /deleteSlide
    Deletes a slide from the user's slides.
    parameters:
        id:
            The ID of the slide (index in the user's slides array)
        user:
            OPTIONAL ADMIN-ONLY
            If provided, the slide will be deleted from the user with the provided username instead.
    returns
        {
            data(Array of the user's slides)
        }

POST /registerUser
    Registers a user from a register link
    parameters:
        registerID: The register link ID
        username: The username
        password: The (unhashed) password
    returns
        Redirect to the admin panel



Admin-only:
GET /getUsers
	Gets all users
	returns:
		{
			data(Array of users. See /getUser)
		}

POST /setUsers
	Sets all users
	parameters:
		users: Array of users. See /getUser for format.
	returns
		{
			data(Array of current users)
		}

POST /addUser
    Adds a new user
    parameters:
        username: The username
        password: The (unhashed) password
        displayName: The user's display name
        needsReset: OPTIONAL
        admin: OPTIONAL
    returns
        Redirect to the admin panel

POST /createRegisterLink
    Creates a link where a user can register themselves
    parameters:
        displayName: The user's display name.
    returns
        {
            data (Array of current users)
        }

POST /deleteUser
    Deletes a user
    parameters:
        id: The ID of the user (index in the users array)
    returns
        {
            data (Array of current users)
        }

Slide format:
	{
		type: String - The type of slide,
		name: String - The name of the slide (also the name of the file),
		duration: float - Seconds to show the slide for,
		hidden: true/false - Is slide hidden?
	}
User format:
    {
        username(String) - The username
        displayName(String) - The display name
        slides(Array of slides. See above for format)
        needsReset(true/false) - Does the user's password need to be reset?
        admin(true/false) - Is the user an admin
        registered(true/false) - Is the user registered? False indicates that they should use the registerLink to register themselves.
        registerID(String) - Registration link identifier
        registerLink(String) - The actual registration link
    }
The API responds with a 400 status code and JSON object { error: (message) }  if there is an error