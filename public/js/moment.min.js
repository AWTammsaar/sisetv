(function (H) {
  var V, aL = "2.9.0", bc = (typeof global !== "undefined" && (typeof window === "undefined" || window === global.window)) ? global : this, aw, ad = Math.round, aR = Object.prototype.hasOwnProperty, al, B = 0, j = 1, a4 = 2, A = 3, aI = 4, y = 5, Z = 6, au = {}, aX = [], av = (typeof module !== "undefined" && module && module.exports), e = /^\/?Date\((\-?\d+)/i, bg = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, aN = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/, az = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g, ak = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, k = /\d\d?/, am = /\d{1,3}/, I = /\d{1,4}/, bm = /[+\-]?\d{1,6}/, ba = /\d+/, N = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, s = /Z|[\+\-]\d\d:?\d\d/gi, o = /T/i, w = /[\+\-]?\d+/, aZ = /[\+\-]?\d+(\.\d{1,3})?/, aj = /\d/, v = /\d\d/, be = /\d{3}/, aY = /\d{4}/, aq = /[+-]?\d{6}/, ag = /[+-]?\d+/, aV = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, aa = "YYYY-MM-DDTHH:mm:ssZ", bd = [["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/], ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/], ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/], ["GGGG-[W]WW", /\d{4}-W\d{2}/], ["YYYY-DDD", /\d{4}-\d{3}/]], L = [["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/], ["HH:mm", /(T| )\d\d:\d\d/], ["HH", /(T| )\d\d/]], ai = /([\+\-]|\d\d)/gi, aP = "Date|Hours|Minutes|Seconds|Milliseconds".split("|"), G = {
    Milliseconds: 1,
    Seconds: 1000,
    Minutes: 60000,
    Hours: 3600000,
    Days: 86400000,
    Months: 2592000000,
    Years: 31536000000
  }, f = {
    ms: "millisecond",
    s: "second",
    m: "minute",
    h: "hour",
    d: "day",
    D: "date",
    w: "week",
    W: "isoWeek",
    M: "month",
    Q: "quarter",
    y: "year",
    DDD: "dayOfYear",
    e: "weekday",
    E: "isoWeekday",
    gg: "weekYear",
    GG: "isoWeekYear"
  }, a9 = {
    dayofyear: "dayOfYear",
    isoweekday: "isoWeekday",
    isoweek: "isoWeek",
    weekyear: "weekYear",
    isoweekyear: "isoWeekYear"
  }, at = {}, C = {
    s: 45,
    m: 45,
    h: 22,
    d: 26,
    M: 11
  }, a3 = "DDD w W M D d".split(" "), ax = "M D H h m s w W".split(" "), a5 = {
    M: function () {
      return this.month() + 1
    }, MMM: function (i) {
      return this.localeData().monthsShort(this, i)
    }, MMMM: function (i) {
      return this.localeData().months(this, i)
    }, D: function () {
      return this.date()
    }, DDD: function () {
      return this.dayOfYear()
    }, d: function () {
      return this.day()
    }, dd: function (i) {
      return this.localeData().weekdaysMin(this, i)
    }, ddd: function (i) {
      return this.localeData().weekdaysShort(this, i)
    }, dddd: function (i) {
      return this.localeData().weekdays(this, i)
    }, w: function () {
      return this.week()
    }, W: function () {
      return this.isoWeek()
    }, YY: function () {
      return O(this.year() % 100, 2)
    }, YYYY: function () {
      return O(this.year(), 4)
    }, YYYYY: function () {
      return O(this.year(), 5)
    }, YYYYYY: function () {
      var bs = this.year(), i = bs >= 0 ? "+" : "-";
      return i + O(Math.abs(bs), 6)
    }, gg: function () {
      return O(this.weekYear() % 100, 2)
    }, gggg: function () {
      return O(this.weekYear(), 4)
    }, ggggg: function () {
      return O(this.weekYear(), 5)
    }, GG: function () {
      return O(this.isoWeekYear() % 100, 2)
    }, GGGG: function () {
      return O(this.isoWeekYear(), 4)
    }, GGGGG: function () {
      return O(this.isoWeekYear(), 5)
    }, e: function () {
      return this.weekday()
    }, E: function () {
      return this.isoWeekday()
    }, a: function () {
      return this.localeData().meridiem(this.hours(), this.minutes(), true)
    }, A: function () {
      return this.localeData().meridiem(this.hours(), this.minutes(), false)
    }, H: function () {
      return this.hours()
    }, h: function () {
      return this.hours() % 12 || 12
    }, m: function () {
      return this.minutes()
    }, s: function () {
      return this.seconds()
    }, S: function () {
      return Q(this.milliseconds() / 100)
    }, SS: function () {
      return O(Q(this.milliseconds() / 10), 2)
    }, SSS: function () {
      return O(this.milliseconds(), 3)
    }, SSSS: function () {
      return O(this.milliseconds(), 3)
    }, Z: function () {
      var bs = this.utcOffset(), i = "+";
      if (bs < 0) {
        bs = -bs;
        i = "-"
      }
      return i + O(Q(bs / 60), 2) + ":" + O(Q(bs) % 60, 2)
    }, ZZ: function () {
      var bs = this.utcOffset(), i = "+";
      if (bs < 0) {
        bs = -bs;
        i = "-"
      }
      return i + O(Q(bs / 60), 2) + O(Q(bs) % 60, 2)
    }, z: function () {
      return this.zoneAbbr()
    }, zz: function () {
      return this.zoneName()
    }, x: function () {
      return this.valueOf()
    }, X: function () {
      return this.unix()
    }, Q: function () {
      return this.quarter()
    }
  }, a = {}, ab = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"], ah = false;

  function a0(bs, i, bt) {
    switch (arguments.length) {
      case 2:
        return bs != null ? bs : i;
      case 3:
        return bs != null ? bs : i != null ? i : bt;
      default:
        throw new Error("Implement me")
    }
  }

  function a6(bs, i) {
    return aR.call(bs, i)
  }

  function ao() {
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false
    }
  }

  function br(i) {
    if (V.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
      console.warn("Deprecation warning: " + i)
    }
  }

  function bp(bs, i) {
    var bt = true;
    return aJ(function () {
      if (bt) {
        br(bs);
        bt = false
      }
      return i.apply(this, arguments)
    }, i)
  }

  function g(i, bs) {
    if (!a[i]) {
      br(bs);
      a[i] = true
    }
  }

  function S(bs, i) {
    return function (bt) {
      return O(bs.call(this, bt), i)
    }
  }

  function l(i, bs) {
    return function (bt) {
      return this.localeData().ordinal(i.call(this, bt), bs)
    }
  }

  function m(bs, i) {
    var bw = ((i.year() - bs.year()) * 12) + (i.month() - bs.month()), bt = bs.clone().add(bw, "months"), bu, bv;
    if (i - bt < 0) {
      bu = bs.clone().add(bw - 1, "months");
      bv = (i - bt) / (bt - bu)
    } else {
      bu = bs.clone().add(bw + 1, "months");
      bv = (i - bt) / (bu - bt)
    }
    return -(bw + bv)
  }

  while (a3.length) {
    al = a3.pop();
    a5[al + "o"] = l(a5[al], al)
  }
  while (ax.length) {
    al = ax.pop();
    a5[al + al] = S(a5[al], 2)
  }
  a5.DDDD = S(a5.DDD, 3);
  function bf(i, bt, bu) {
    var bs;
    if (bu == null) {
      return bt
    }
    if (i.meridiemHour != null) {
      return i.meridiemHour(bt, bu)
    } else {
      if (i.isPM != null) {
        bs = i.isPM(bu);
        if (bs && bt < 12) {
          bt += 12
        }
        if (!bs && bt === 12) {
          bt = 0
        }
        return bt
      } else {
        return bt
      }
    }
  }

  function af() {
  }

  function P(bs, i) {
    if (i !== false) {
      bj(bs)
    }
    aT(this, bs);
    this._d = new Date(+bs._d);
    if (ah === false) {
      ah = true;
      V.updateOffset(this);
      ah = false
    }
  }

  function an(bw) {
    var by = p(bw), bx = by.year || 0, bs = by.quarter || 0, bt = by.month || 0, i = by.week || 0, bB = by.day || 0, bz = by.hour || 0, bv = by.minute || 0, bA = by.second || 0, bu = by.millisecond || 0;
    this._milliseconds = +bu + bA * 1000 + bv * 60000 + bz * 3600000;
    this._days = +bB + i * 7;
    this._months = +bt + bs * 3 + bx * 12;
    this._data = {};
    this._locale = V.localeData();
    this._bubble()
  }

  function aJ(bt, bs) {
    for (var bu in bs) {
      if (a6(bs, bu)) {
        bt[bu] = bs[bu]
      }
    }
    if (a6(bs, "toString")) {
      bt.toString = bs.toString
    }
    if (a6(bs, "valueOf")) {
      bt.valueOf = bs.valueOf
    }
    return bt
  }

  function aT(bw, bv) {
    var bs, bu, bt;
    if (typeof bv._isAMomentObject !== "undefined") {
      bw._isAMomentObject = bv._isAMomentObject
    }
    if (typeof bv._i !== "undefined") {
      bw._i = bv._i
    }
    if (typeof bv._f !== "undefined") {
      bw._f = bv._f
    }
    if (typeof bv._l !== "undefined") {
      bw._l = bv._l
    }
    if (typeof bv._strict !== "undefined") {
      bw._strict = bv._strict
    }
    if (typeof bv._tzm !== "undefined") {
      bw._tzm = bv._tzm
    }
    if (typeof bv._isUTC !== "undefined") {
      bw._isUTC = bv._isUTC
    }
    if (typeof bv._offset !== "undefined") {
      bw._offset = bv._offset
    }
    if (typeof bv._pf !== "undefined") {
      bw._pf = bv._pf
    }
    if (typeof bv._locale !== "undefined") {
      bw._locale = bv._locale
    }
    if (aX.length > 0) {
      for (bs in aX) {
        bu = aX[bs];
        bt = bv[bu];
        if (typeof bt !== "undefined") {
          bw[bu] = bt
        }
      }
    }
    return bw
  }

  function q(i) {
    if (i < 0) {
      return Math.ceil(i)
    } else {
      return Math.floor(i)
    }
  }

  function O(bv, bu, bt) {
    var bs = "" + Math.abs(bv), i = bv >= 0;
    while (bs.length < bu) {
      bs = "0" + bs
    }
    return (i ? (bt ? "+" : "") : "-") + bs
  }

  function d(bt, i) {
    var bs = {milliseconds: 0, months: 0};
    bs.months = i.month() - bt.month() + (i.year() - bt.year()) * 12;
    if (bt.clone().add(bs.months, "M").isAfter(i)) {
      --bs.months
    }
    bs.milliseconds = +i - +(bt.clone().add(bs.months, "M"));
    return bs
  }

  function ac(bt, i) {
    var bs;
    i = D(i, bt);
    if (bt.isBefore(i)) {
      bs = d(bt, i)
    } else {
      bs = d(i, bt);
      bs.milliseconds = -bs.milliseconds;
      bs.months = -bs.months
    }
    return bs
  }

  function W(bs, i) {
    return function (bw, bv) {
      var bu, bt;
      if (bv !== null && !isNaN(+bv)) {
        g(i, "moment()." + i + "(period, number) is deprecated. Please use moment()." + i + "(number, period).");
        bt = bw;
        bw = bv;
        bv = bt
      }
      bw = typeof bw === "string" ? +bw : bw;
      bu = V.duration(bw, bv);
      K(this, bu, bs);
      return this
    }
  }

  function K(bt, bw, bv, bu) {
    var bs = bw._milliseconds, bx = bw._days, i = bw._months;
    bu = bu == null ? true : bu;
    if (bs) {
      bt._d.setTime(+bt._d + bs * bv)
    }
    if (bx) {
      a1(bt, "Date", bq(bt, "Date") + bx * bv)
    }
    if (i) {
      bl(bt, bq(bt, "Month") + i * bv)
    }
    if (bu) {
      V.updateOffset(bt, bx || i)
    }
  }

  function b(i) {
    return Object.prototype.toString.call(i) === "[object Array]"
  }

  function h(i) {
    return Object.prototype.toString.call(i) === "[object Date]" || i instanceof Date
  }

  function a2(bx, bw, bt) {
    var bs = Math.min(bx.length, bw.length), bu = Math.abs(bx.length - bw.length), by = 0, bv;
    for (bv = 0; bv < bs; bv++) {
      if ((bt && bx[bv] !== bw[bv]) || (!bt && Q(bx[bv]) !== Q(bw[bv]))) {
        by++
      }
    }
    return by + bu
  }

  function a8(bs) {
    if (bs) {
      var i = bs.toLowerCase().replace(/(.)s$/, "$1");
      bs = f[bs] || a9[i] || i
    }
    return bs
  }

  function p(bt) {
    var bs = {}, i, bu;
    for (bu in bt) {
      if (a6(bt, bu)) {
        i = a8(bu);
        if (i) {
          bs[i] = bt[bu]
        }
      }
    }
    return bs
  }

  function aF(bs) {
    var i, bt;
    if (bs.indexOf("week") === 0) {
      i = 7;
      bt = "day"
    } else {
      if (bs.indexOf("month") === 0) {
        i = 12;
        bt = "month"
      } else {
        return
      }
    }
    V[bs] = function (by, bv) {
      var bx, bu, bz = V._locale[bs], bw = [];
      if (typeof by === "number") {
        bv = by;
        by = H
      }
      bu = function (bB) {
        var bA = V().utc().set(bt, bB);
        return bz.call(V._locale, bA, by || "")
      };
      if (bv != null) {
        return bu(bv)
      } else {
        for (bx = 0; bx < i; bx++) {
          bw.push(bu(bx))
        }
        return bw
      }
    }
  }

  function Q(i) {
    var bt = +i, bs = 0;
    if (bt !== 0 && isFinite(bt)) {
      if (bt >= 0) {
        bs = Math.floor(bt)
      } else {
        bs = Math.ceil(bt)
      }
    }
    return bs
  }

  function bh(i, bs) {
    return new Date(Date.UTC(i, bs + 1, 0)).getUTCDate()
  }

  function aO(i, bt, bs) {
    return F(V([i, 11, 31 + bt - bs]), bt, bs).week
  }

  function bb(i) {
    return aU(i) ? 366 : 365
  }

  function aU(i) {
    return (i % 4 === 0 && i % 100 !== 0) || i % 400 === 0
  }

  function bj(i) {
    var bs;
    if (i._a && i._pf.overflow === -2) {
      bs = i._a[j] < 0 || i._a[j] > 11 ? j : i._a[a4] < 1 || i._a[a4] > bh(i._a[B], i._a[j]) ? a4 : i._a[A] < 0 || i._a[A] > 24 || (i._a[A] === 24 && (i._a[aI] !== 0 || i._a[y] !== 0 || i._a[Z] !== 0)) ? A : i._a[aI] < 0 || i._a[aI] > 59 ? aI : i._a[y] < 0 || i._a[y] > 59 ? y : i._a[Z] < 0 || i._a[Z] > 999 ? Z : -1;
      if (i._pf._overflowDayOfYear && (bs < B || bs > a4)) {
        bs = a4
      }
      i._pf.overflow = bs
    }
  }

  function aK(i) {
    if (i._isValid == null) {
      i._isValid = !isNaN(i._d.getTime()) && i._pf.overflow < 0 && !i._pf.empty && !i._pf.invalidMonth && !i._pf.nullInput && !i._pf.invalidFormat && !i._pf.userInvalidated;
      if (i._strict) {
        i._isValid = i._isValid && i._pf.charsLeftOver === 0 && i._pf.unusedTokens.length === 0 && i._pf.bigHour === H
      }
    }
    return i._isValid
  }

  function aW(i) {
    return i ? i.toLowerCase().replace("_", "-") : i
  }

  function aC(bx) {
    var bv = 0, bt, bw, bs, bu;
    while (bv < bx.length) {
      bu = aW(bx[bv]).split("-");
      bt = bu.length;
      bw = aW(bx[bv + 1]);
      bw = bw ? bw.split("-") : null;
      while (bt > 0) {
        bs = c(bu.slice(0, bt).join("-"));
        if (bs) {
          return bs
        }
        if (bw && bw.length >= bt && a2(bu, bw, true) >= bt - 1) {
          break
        }
        bt--
      }
      bv++
    }
    return null
  }

  function c(i) {
    var bt = null;
    if (!au[i] && av) {
      try {
        bt = V.locale();
        require("./locale/" + i);
        V.locale(bt)
      } catch (bs) {
      }
    }
    return au[i]
  }

  function D(i, bs) {
    var bt, bu;
    if (bs._isUTC) {
      bt = bs.clone();
      bu = (V.isMoment(i) || h(i) ? +i : +V(i)) - (+bt);
      bt._d.setTime(+bt._d + bu);
      V.updateOffset(bt, false);
      return bt
    } else {
      return V(i).local()
    }
  }

  aJ(af.prototype, {
    set: function (bs) {
      var bu, bt;
      for (bt in bs) {
        bu = bs[bt];
        if (typeof bu === "function") {
          this[bt] = bu
        } else {
          this["_" + bt] = bu
        }
      }
      this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + /\d{1,2}/.source)
    },
    _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
    months: function (i) {
      return this._months[i.month()]
    },
    _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
    monthsShort: function (i) {
      return this._monthsShort[i.month()]
    },
    monthsParse: function (bt, bx, bs) {
      var bu, bw, bv;
      if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = []
      }
      for (bu = 0; bu < 12; bu++) {
        bw = V.utc([2000, bu]);
        if (bs && !this._longMonthsParse[bu]) {
          this._longMonthsParse[bu] = new RegExp("^" + this.months(bw, "").replace(".", "") + "$", "i");
          this._shortMonthsParse[bu] = new RegExp("^" + this.monthsShort(bw, "").replace(".", "") + "$", "i")
        }
        if (!bs && !this._monthsParse[bu]) {
          bv = "^" + this.months(bw, "") + "|^" + this.monthsShort(bw, "");
          this._monthsParse[bu] = new RegExp(bv.replace(".", ""), "i")
        }
        if (bs && bx === "MMMM" && this._longMonthsParse[bu].test(bt)) {
          return bu
        } else {
          if (bs && bx === "MMM" && this._shortMonthsParse[bu].test(bt)) {
            return bu
          } else {
            if (!bs && this._monthsParse[bu].test(bt)) {
              return bu
            }
          }
        }
      }
    },
    _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
    weekdays: function (i) {
      return this._weekdays[i.day()]
    },
    _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
    weekdaysShort: function (i) {
      return this._weekdaysShort[i.day()]
    },
    _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
    weekdaysMin: function (i) {
      return this._weekdaysMin[i.day()]
    },
    weekdaysParse: function (bv) {
      var bs, bu, bt;
      if (!this._weekdaysParse) {
        this._weekdaysParse = []
      }
      for (bs = 0; bs < 7; bs++) {
        if (!this._weekdaysParse[bs]) {
          bu = V([2000, 1]).day(bs);
          bt = "^" + this.weekdays(bu, "") + "|^" + this.weekdaysShort(bu, "") + "|^" + this.weekdaysMin(bu, "");
          this._weekdaysParse[bs] = new RegExp(bt.replace(".", ""), "i")
        }
        if (this._weekdaysParse[bs].test(bv)) {
          return bs
        }
      }
    },
    _longDateFormat: {
      LTS: "h:mm:ss A",
      LT: "h:mm A",
      L: "MM/DD/YYYY",
      LL: "MMMM D, YYYY",
      LLL: "MMMM D, YYYY LT",
      LLLL: "dddd, MMMM D, YYYY LT"
    },
    longDateFormat: function (bs) {
      var i = this._longDateFormat[bs];
      if (!i && this._longDateFormat[bs.toUpperCase()]) {
        i = this._longDateFormat[bs.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (bt) {
          return bt.slice(1)
        });
        this._longDateFormat[bs] = i
      }
      return i
    },
    isPM: function (i) {
      return ((i + "").toLowerCase().charAt(0) === "p")
    },
    _meridiemParse: /[ap]\.?m?\.?/i,
    meridiem: function (i, bs, bt) {
      if (i > 11) {
        return bt ? "pm" : "PM"
      } else {
        return bt ? "am" : "AM"
      }
    },
    _calendar: {
      sameDay: "[Today at] LT",
      nextDay: "[Tomorrow at] LT",
      nextWeek: "dddd [at] LT",
      lastDay: "[Yesterday at] LT",
      lastWeek: "[Last] dddd [at] LT",
      sameElse: "L"
    },
    calendar: function (bt, bu, bs) {
      var i = this._calendar[bt];
      return typeof i === "function" ? i.apply(bu, [bs]) : i
    },
    _relativeTime: {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    },
    relativeTime: function (bu, bt, bs, bv) {
      var i = this._relativeTime[bs];
      return (typeof i === "function") ? i(bu, bt, bs, bv) : i.replace(/%d/i, bu)
    },
    pastFuture: function (bt, i) {
      var bs = this._relativeTime[bt > 0 ? "future" : "past"];
      return typeof bs === "function" ? bs(i) : bs.replace(/%s/i, i)
    },
    ordinal: function (i) {
      return this._ordinal.replace("%d", i)
    },
    _ordinal: "%d",
    _ordinalParse: /\d{1,2}/,
    preparse: function (i) {
      return i
    },
    postformat: function (i) {
      return i
    },
    week: function (i) {
      return F(i, this._week.dow, this._week.doy).week
    },
    _week: {dow: 0, doy: 6},
    firstDayOfWeek: function () {
      return this._week.dow
    },
    firstDayOfYear: function () {
      return this._week.doy
    },
    _invalidDate: "Invalid date",
    invalidDate: function () {
      return this._invalidDate
    }
  });
  function ar(i) {
    if (i.match(/\[[\s\S]/)) {
      return i.replace(/^\[|\]$/g, "")
    }
    return i.replace(/\\/g, "")
  }

  function x(bu) {
    var bv = bu.match(az), bs, bt;
    for (bs = 0, bt = bv.length; bs < bt; bs++) {
      if (a5[bv[bs]]) {
        bv[bs] = a5[bv[bs]]
      } else {
        bv[bs] = ar(bv[bs])
      }
    }
    return function (bw) {
      var i = "";
      for (bs = 0; bs < bt; bs++) {
        i += bv[bs] instanceof Function ? bv[bs].call(bw, bu) : bv[bs]
      }
      return i
    }
  }

  function ay(i, bs) {
    if (!i.isValid()) {
      return i.localeData().invalidDate()
    }
    bs = bn(bs, i.localeData());
    if (!at[bs]) {
      at[bs] = x(bs)
    }
    return at[bs](i)
  }

  function bn(bv, bs) {
    var bt = 5;

    function bu(i) {
      return bs.longDateFormat(i) || i
    }

    ak.lastIndex = 0;
    while (bt >= 0 && ak.test(bv)) {
      bv = bv.replace(ak, bu);
      ak.lastIndex = 0;
      bt -= 1
    }
    return bv
  }

  function aD(bu, bt) {
    var bs, i = bt._strict;
    switch (bu) {
      case"Q":
        return aj;
      case"DDDD":
        return be;
      case"YYYY":
      case"GGGG":
      case"gggg":
        return i ? aY : I;
      case"Y":
      case"G":
      case"g":
        return ag;
      case"YYYYYY":
      case"YYYYY":
      case"GGGGG":
      case"ggggg":
        return i ? aq : bm;
      case"S":
        if (i) {
          return aj
        }
      case"SS":
        if (i) {
          return v
        }
      case"SSS":
        if (i) {
          return be
        }
      case"DDD":
        return am;
      case"MMM":
      case"MMMM":
      case"dd":
      case"ddd":
      case"dddd":
        return N;
      case"a":
      case"A":
        return bt._locale._meridiemParse;
      case"x":
        return w;
      case"X":
        return aZ;
      case"Z":
      case"ZZ":
        return s;
      case"T":
        return o;
      case"SSSS":
        return ba;
      case"MM":
      case"DD":
      case"YY":
      case"GG":
      case"gg":
      case"HH":
      case"hh":
      case"mm":
      case"ss":
      case"ww":
      case"WW":
        return i ? v : k;
      case"M":
      case"D":
      case"d":
      case"H":
      case"h":
      case"m":
      case"s":
      case"w":
      case"W":
      case"e":
      case"E":
        return k;
      case"Do":
        return i ? bt._locale._ordinalParse : bt._locale._ordinalParseLenient;
      default:
        bs = new RegExp(bk(aH(bu.replace("\\", "")), "i"));
        return bs
    }
  }

  function aQ(bs) {
    bs = bs || "";
    var i = (bs.match(s) || []), bv = i[i.length - 1] || [], bu = (bv + "").match(ai) || ["-", 0, 0], bt = +(bu[1] * 60) + Q(bu[2]);
    return bu[0] === "+" ? bt : -bt
  }

  function aG(bv, bt, bu) {
    var bs, i = bu._a;
    switch (bv) {
      case"Q":
        if (bt != null) {
          i[j] = (Q(bt) - 1) * 3
        }
        break;
      case"M":
      case"MM":
        if (bt != null) {
          i[j] = Q(bt) - 1
        }
        break;
      case"MMM":
      case"MMMM":
        bs = bu._locale.monthsParse(bt, bv, bu._strict);
        if (bs != null) {
          i[j] = bs
        } else {
          bu._pf.invalidMonth = bt
        }
        break;
      case"D":
      case"DD":
        if (bt != null) {
          i[a4] = Q(bt)
        }
        break;
      case"Do":
        if (bt != null) {
          i[a4] = Q(parseInt(bt.match(/\d{1,2}/)[0], 10))
        }
        break;
      case"DDD":
      case"DDDD":
        if (bt != null) {
          bu._dayOfYear = Q(bt)
        }
        break;
      case"YY":
        i[B] = V.parseTwoDigitYear(bt);
        break;
      case"YYYY":
      case"YYYYY":
      case"YYYYYY":
        i[B] = Q(bt);
        break;
      case"a":
      case"A":
        bu._meridiem = bt;
        break;
      case"h":
      case"hh":
        bu._pf.bigHour = true;
      case"H":
      case"HH":
        i[A] = Q(bt);
        break;
      case"m":
      case"mm":
        i[aI] = Q(bt);
        break;
      case"s":
      case"ss":
        i[y] = Q(bt);
        break;
      case"S":
      case"SS":
      case"SSS":
      case"SSSS":
        i[Z] = Q(("0." + bt) * 1000);
        break;
      case"x":
        bu._d = new Date(Q(bt));
        break;
      case"X":
        bu._d = new Date(parseFloat(bt) * 1000);
        break;
      case"Z":
      case"ZZ":
        bu._useUTC = true;
        bu._tzm = aQ(bt);
        break;
      case"dd":
      case"ddd":
      case"dddd":
        bs = bu._locale.weekdaysParse(bt);
        if (bs != null) {
          bu._w = bu._w || {};
          bu._w.d = bs
        } else {
          bu._pf.invalidWeekday = bt
        }
        break;
      case"w":
      case"ww":
      case"W":
      case"WW":
      case"d":
      case"e":
      case"E":
        bv = bv.substr(0, 1);
      case"gggg":
      case"GGGG":
      case"GGGGG":
        bv = bv.substr(0, 2);
        if (bt) {
          bu._w = bu._w || {};
          bu._w[bv] = Q(bt)
        }
        break;
      case"gg":
      case"GG":
        bu._w = bu._w || {};
        bu._w[bv] = V.parseTwoDigitYear(bt)
    }
  }

  function X(bt) {
    var i, bv, bu, bw, by, bx, bs;
    i = bt._w;
    if (i.GG != null || i.W != null || i.E != null) {
      by = 1;
      bx = 4;
      bv = a0(i.GG, bt._a[B], F(V(), 1, 4).year);
      bu = a0(i.W, 1);
      bw = a0(i.E, 1)
    } else {
      by = bt._locale._week.dow;
      bx = bt._locale._week.doy;
      bv = a0(i.gg, bt._a[B], F(V(), by, bx).year);
      bu = a0(i.w, 1);
      if (i.d != null) {
        bw = i.d;
        if (bw < by) {
          ++bu
        }
      } else {
        if (i.e != null) {
          bw = i.e + by
        } else {
          bw = by
        }
      }
    }
    bs = z(bv, bu, bw, bx, by);
    bt._a[B] = bs.year;
    bt._dayOfYear = bs.dayOfYear
  }

  function ap(bw) {
    var bx, bv, bu = [], bt, bs;
    if (bw._d) {
      return
    }
    bt = r(bw);
    if (bw._w && bw._a[a4] == null && bw._a[j] == null) {
      X(bw)
    }
    if (bw._dayOfYear) {
      bs = a0(bw._a[B], bt[B]);
      if (bw._dayOfYear > bb(bs)) {
        bw._pf._overflowDayOfYear = true
      }
      bv = M(bs, 0, bw._dayOfYear);
      bw._a[j] = bv.getUTCMonth();
      bw._a[a4] = bv.getUTCDate()
    }
    for (bx = 0; bx < 3 && bw._a[bx] == null; ++bx) {
      bw._a[bx] = bu[bx] = bt[bx]
    }
    for (; bx < 7; bx++) {
      bw._a[bx] = bu[bx] = (bw._a[bx] == null) ? (bx === 2 ? 1 : 0) : bw._a[bx]
    }
    if (bw._a[A] === 24 && bw._a[aI] === 0 && bw._a[y] === 0 && bw._a[Z] === 0) {
      bw._nextDay = true;
      bw._a[A] = 0
    }
    bw._d = (bw._useUTC ? M : aA).apply(null, bu);
    if (bw._tzm != null) {
      bw._d.setUTCMinutes(bw._d.getUTCMinutes() - bw._tzm)
    }
    if (bw._nextDay) {
      bw._a[A] = 24
    }
  }

  function aM(bs) {
    var i;
    if (bs._d) {
      return
    }
    i = p(bs._i);
    bs._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];
    ap(bs)
  }

  function r(bs) {
    var i = new Date();
    if (bs._useUTC) {
      return [i.getUTCFullYear(), i.getUTCMonth(), i.getUTCDate()]
    } else {
      return [i.getFullYear(), i.getMonth(), i.getDate()]
    }
  }

  function U(bu) {
    if (bu._f === V.ISO_8601) {
      aB(bu);
      return
    }
    bu._a = [];
    bu._pf.empty = true;
    var bx = "" + bu._i, bw, bt, bA, bv, bz, bs = bx.length, by = 0;
    bA = bn(bu._f, bu._locale).match(az) || [];
    for (bw = 0; bw < bA.length; bw++) {
      bv = bA[bw];
      bt = (bx.match(aD(bv, bu)) || [])[0];
      if (bt) {
        bz = bx.substr(0, bx.indexOf(bt));
        if (bz.length > 0) {
          bu._pf.unusedInput.push(bz)
        }
        bx = bx.slice(bx.indexOf(bt) + bt.length);
        by += bt.length
      }
      if (a5[bv]) {
        if (bt) {
          bu._pf.empty = false
        } else {
          bu._pf.unusedTokens.push(bv)
        }
        aG(bv, bt, bu)
      } else {
        if (bu._strict && !bt) {
          bu._pf.unusedTokens.push(bv)
        }
      }
    }
    bu._pf.charsLeftOver = bs - by;
    if (bx.length > 0) {
      bu._pf.unusedInput.push(bx)
    }
    if (bu._pf.bigHour === true && bu._a[A] <= 12) {
      bu._pf.bigHour = H
    }
    bu._a[A] = bf(bu._locale, bu._a[A], bu._meridiem);
    ap(bu);
    bj(bu)
  }

  function aH(i) {
    return i.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (bs, bw, bv, bu, bt) {
      return bw || bv || bu || bt
    })
  }

  function bk(i) {
    return i.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
  }

  function a7(bs) {
    var bw, bu, bv, bt, bx;
    if (bs._f.length === 0) {
      bs._pf.invalidFormat = true;
      bs._d = new Date(NaN);
      return
    }
    for (bt = 0; bt < bs._f.length; bt++) {
      bx = 0;
      bw = aT({}, bs);
      if (bs._useUTC != null) {
        bw._useUTC = bs._useUTC
      }
      bw._pf = ao();
      bw._f = bs._f[bt];
      U(bw);
      if (!aK(bw)) {
        continue
      }
      bx += bw._pf.charsLeftOver;
      bx += bw._pf.unusedTokens.length * 10;
      bw._pf.score = bx;
      if (bv == null || bx < bv) {
        bv = bx;
        bu = bw
      }
    }
    aJ(bs, bu || bw)
  }

  function aB(bv) {
    var bw, bs, bu = bv._i, bt = aV.exec(bu);
    if (bt) {
      bv._pf.iso = true;
      for (bw = 0, bs = bd.length; bw < bs; bw++) {
        if (bd[bw][1].exec(bu)) {
          bv._f = bd[bw][0] + (bt[6] || " ");
          break
        }
      }
      for (bw = 0, bs = L.length; bw < bs; bw++) {
        if (L[bw][1].exec(bu)) {
          bv._f += L[bw][0];
          break
        }
      }
      if (bu.match(s)) {
        bv._f += "Z"
      }
      U(bv)
    } else {
      bv._isValid = false
    }
  }

  function n(i) {
    aB(i);
    if (i._isValid === false) {
      delete i._isValid;
      V.createFromInputFallback(i)
    }
  }

  function J(bs, bv) {
    var bu = [], bt;
    for (bt = 0; bt < bs.length; ++bt) {
      bu.push(bv(bs[bt], bt))
    }
    return bu
  }

  function T(bt) {
    var bs = bt._i, i;
    if (bs === H) {
      bt._d = new Date()
    } else {
      if (h(bs)) {
        bt._d = new Date(+bs)
      } else {
        if ((i = e.exec(bs)) !== null) {
          bt._d = new Date(+i[1])
        } else {
          if (typeof bs === "string") {
            n(bt)
          } else {
            if (b(bs)) {
              bt._a = J(bs.slice(0), function (bu) {
                return parseInt(bu, 10)
              });
              ap(bt)
            } else {
              if (typeof(bs) === "object") {
                aM(bt)
              } else {
                if (typeof(bs) === "number") {
                  bt._d = new Date(bs)
                } else {
                  V.createFromInputFallback(bt)
                }
              }
            }
          }
        }
      }
    }
  }

  function aA(by, i, bw, bv, bx, bu, bt) {
    var bs = new Date(by, i, bw, bv, bx, bu, bt);
    if (by < 1970) {
      bs.setFullYear(by)
    }
    return bs
  }

  function M(bs) {
    var i = new Date(Date.UTC.apply(null, arguments));
    if (bs < 1970) {
      i.setUTCFullYear(bs)
    }
    return i
  }

  function bi(bs, i) {
    if (typeof bs === "string") {
      if (!isNaN(bs)) {
        bs = parseInt(bs, 10)
      } else {
        bs = i.weekdaysParse(bs);
        if (typeof bs !== "number") {
          return null
        }
      }
    }
    return bs
  }

  function aS(bs, bu, bt, bv, i) {
    return i.relativeTime(bu || 1, !!bt, bs, bv)
  }

  function E(bv, bs, bz) {
    var bt = V.duration(bv).abs(), bA = ad(bt.as("s")), bu = ad(bt.as("m")), by = ad(bt.as("h")), bB = ad(bt.as("d")), i = ad(bt.as("M")), bw = ad(bt.as("y")), bx = bA < C.s && ["s", bA] || bu === 1 && ["m"] || bu < C.m && ["mm", bu] || by === 1 && ["h"] || by < C.h && ["hh", by] || bB === 1 && ["d"] || bB < C.d && ["dd", bB] || i === 1 && ["M"] || i < C.M && ["MM", i] || bw === 1 && ["y"] || ["yy", bw];
    bx[2] = bs;
    bx[3] = +bv > 0;
    bx[4] = bz;
    return aS.apply({}, bx)
  }

  function F(bv, bt, bw) {
    var bs = bw - bt, i = bw - bv.day(), bu;
    if (i > bs) {
      i -= 7
    }
    if (i < bs - 7) {
      i += 7
    }
    bu = V(bv).add(i, "d");
    return {week: Math.ceil(bu.dayOfYear() / 7), year: bu.year()}
  }

  function z(bv, bu, bw, by, i) {
    var bx = M(bv, 0, 1).getUTCDay(), bt, bs;
    bx = bx === 0 ? 7 : bx;
    bw = bw != null ? bw : i;
    bt = i - bx + (bx > by ? 7 : 0) - (bx < i ? 7 : 0);
    bs = 7 * (bu - 1) + (bw - i) + bt + 1;
    return {year: bs > 0 ? bv : bv - 1, dayOfYear: bs > 0 ? bs : bb(bv - 1) + bs}
  }

  function R(bs) {
    var i = bs._i, bu = bs._f, bt;
    bs._locale = bs._locale || V.localeData(bs._l);
    if (i === null || (bu === H && i === "")) {
      return V.invalid({nullInput: true})
    }
    if (typeof i === "string") {
      bs._i = i = bs._locale.preparse(i)
    }
    if (V.isMoment(i)) {
      return new P(i, true)
    } else {
      if (bu) {
        if (b(bu)) {
          a7(bs)
        } else {
          U(bs)
        }
      } else {
        T(bs)
      }
    }
    bt = new P(bs);
    if (bt._nextDay) {
      bt.add(1, "d");
      bt._nextDay = H
    }
    return bt
  }

  V = function (bt, bu, i, bs) {
    var bv;
    if (typeof(i) === "boolean") {
      bs = i;
      i = H
    }
    bv = {};
    bv._isAMomentObject = true;
    bv._i = bt;
    bv._f = bu;
    bv._l = i;
    bv._strict = bs;
    bv._isUTC = false;
    bv._pf = ao();
    return R(bv)
  };
  V.suppressDeprecationWarnings = false;
  V.createFromInputFallback = bp("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function (i) {
    i._d = new Date(i._i + (i._useUTC ? " UTC" : ""))
  });
  function aE(bu, bv) {
    var bt, bs;
    if (bv.length === 1 && b(bv[0])) {
      bv = bv[0]
    }
    if (!bv.length) {
      return V()
    }
    bt = bv[0];
    for (bs = 1; bs < bv.length; ++bs) {
      if (bv[bs][bu](bt)) {
        bt = bv[bs]
      }
    }
    return bt
  }

  V.min = function () {
    var i = [].slice.call(arguments, 0);
    return aE("isBefore", i)
  };
  V.max = function () {
    var i = [].slice.call(arguments, 0);
    return aE("isAfter", i)
  };
  V.utc = function (bt, bu, i, bs) {
    var bv;
    if (typeof(i) === "boolean") {
      bs = i;
      i = H
    }
    bv = {};
    bv._isAMomentObject = true;
    bv._useUTC = true;
    bv._isUTC = true;
    bv._l = i;
    bv._i = bt;
    bv._f = bu;
    bv._strict = bs;
    bv._pf = ao();
    return R(bv).utc()
  };
  V.unix = function (i) {
    return V(i * 1000)
  };
  V.duration = function (bt, bx) {
    var by = bt, bw = null, bs, bv, bu, i;
    if (V.isDuration(bt)) {
      by = {ms: bt._milliseconds, d: bt._days, M: bt._months}
    } else {
      if (typeof bt === "number") {
        by = {};
        if (bx) {
          by[bx] = bt
        } else {
          by.milliseconds = bt
        }
      } else {
        if (!!(bw = bg.exec(bt))) {
          bs = (bw[1] === "-") ? -1 : 1;
          by = {y: 0, d: Q(bw[a4]) * bs, h: Q(bw[A]) * bs, m: Q(bw[aI]) * bs, s: Q(bw[y]) * bs, ms: Q(bw[Z]) * bs}
        } else {
          if (!!(bw = aN.exec(bt))) {
            bs = (bw[1] === "-") ? -1 : 1;
            bu = function (bA) {
              var bz = bA && parseFloat(bA.replace(",", "."));
              return (isNaN(bz) ? 0 : bz) * bs
            };
            by = {y: bu(bw[2]), M: bu(bw[3]), d: bu(bw[4]), h: bu(bw[5]), m: bu(bw[6]), s: bu(bw[7]), w: bu(bw[8])}
          } else {
            if (by == null) {
              by = {}
            } else {
              if (typeof by === "object" && ("from" in by || "to" in by)) {
                i = ac(V(by.from), V(by.to));
                by = {};
                by.ms = i.milliseconds;
                by.M = i.months
              }
            }
          }
        }
      }
    }
    bv = new an(by);
    if (V.isDuration(bt) && a6(bt, "_locale")) {
      bv._locale = bt._locale
    }
    return bv
  };
  V.version = aL;
  V.defaultFormat = aa;
  V.ISO_8601 = function () {
  };
  V.momentProperties = aX;
  V.updateOffset = function () {
  };
  V.relativeTimeThreshold = function (i, bs) {
    if (C[i] === H) {
      return false
    }
    if (bs === H) {
      return C[i]
    }
    C[i] = bs;
    return true
  };
  V.lang = bp("moment.lang is deprecated. Use moment.locale instead.", function (i, bs) {
    return V.locale(i, bs)
  });
  V.locale = function (bs, i) {
    var bt;
    if (bs) {
      if (typeof(i) !== "undefined") {
        bt = V.defineLocale(bs, i)
      } else {
        bt = V.localeData(bs)
      }
      if (bt) {
        V.duration._locale = V._locale = bt
      }
    }
    return V._locale._abbr
  };
  V.defineLocale = function (bs, i) {
    if (i !== null) {
      i.abbr = bs;
      if (!au[bs]) {
        au[bs] = new af()
      }
      au[bs].set(i);
      V.locale(bs);
      return au[bs]
    } else {
      delete au[bs];
      return null
    }
  };
  V.langData = bp("moment.langData is deprecated. Use moment.localeData instead.", function (i) {
    return V.localeData(i)
  });
  V.localeData = function (bs) {
    var i;
    if (bs && bs._locale && bs._locale._abbr) {
      bs = bs._locale._abbr
    }
    if (!bs) {
      return V._locale
    }
    if (!b(bs)) {
      i = c(bs);
      if (i) {
        return i
      }
      bs = [bs]
    }
    return aC(bs)
  };
  V.isMoment = function (i) {
    return i instanceof P || (i != null && a6(i, "_isAMomentObject"))
  };
  V.isDuration = function (i) {
    return i instanceof an
  };
  for (al = ab.length - 1; al >= 0; --al) {
    aF(ab[al])
  }
  V.normalizeUnits = function (i) {
    return a8(i)
  };
  V.invalid = function (bs) {
    var i = V.utc(NaN);
    if (bs != null) {
      aJ(i._pf, bs)
    } else {
      i._pf.userInvalidated = true
    }
    return i
  };
  V.parseZone = function () {
    return V.apply(null, arguments).parseZone()
  };
  V.parseTwoDigitYear = function (i) {
    return Q(i) + (Q(i) > 68 ? 1900 : 2000)
  };
  V.isDate = h;
  aJ(V.fn = P.prototype, {
    clone: function () {
      return V(this)
    },
    valueOf: function () {
      return +this._d - ((this._offset || 0) * 60000)
    },
    unix: function () {
      return Math.floor(+this / 1000)
    },
    toString: function () {
      return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    },
    toDate: function () {
      return this._offset ? new Date(+this) : this._d
    },
    toISOString: function () {
      var i = V(this).utc();
      if (0 < i.year() && i.year() <= 9999) {
        if ("function" === typeof Date.prototype.toISOString) {
          return this.toDate().toISOString()
        } else {
          return ay(i, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
        }
      } else {
        return ay(i, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
      }
    },
    toArray: function () {
      var i = this;
      return [i.year(), i.month(), i.date(), i.hours(), i.minutes(), i.seconds(), i.milliseconds()]
    },
    isValid: function () {
      return aK(this)
    },
    isDSTShifted: function () {
      if (this._a) {
        return this.isValid() && a2(this._a, (this._isUTC ? V.utc(this._a) : V(this._a)).toArray()) > 0
      }
      return false
    },
    parsingFlags: function () {
      return aJ({}, this._pf)
    },
    invalidAt: function () {
      return this._pf.overflow
    },
    utc: function (i) {
      return this.utcOffset(0, i)
    },
    local: function (i) {
      if (this._isUTC) {
        this.utcOffset(0, i);
        this._isUTC = false;
        if (i) {
          this.subtract(this._dateUtcOffset(), "m")
        }
      }
      return this
    },
    format: function (bs) {
      var i = ay(this, bs || V.defaultFormat);
      return this.localeData().postformat(i)
    },
    add: W(1, "add"),
    subtract: W(-1, "subtract"),
    diff: function (bx, bw, bz) {
      var bv = D(bx, this), bt = (bv.utcOffset() - this.utcOffset()) * 60000, bs, by, i, bu;
      bw = a8(bw);
      if (bw === "year" || bw === "month" || bw === "quarter") {
        i = m(this, bv);
        if (bw === "quarter") {
          i = i / 3
        } else {
          if (bw === "year") {
            i = i / 12
          }
        }
      } else {
        by = this - bv;
        i = bw === "second" ? by / 1000 : bw === "minute" ? by / 60000 : bw === "hour" ? by / 3600000 : bw === "day" ? (by - bt) / 86400000 : bw === "week" ? (by - bt) / 604800000 : by
      }
      return bz ? i : q(i)
    },
    from: function (bs, i) {
      return V.duration({to: this, from: bs}).locale(this.locale()).humanize(!i)
    },
    fromNow: function (i) {
      return this.from(V(), i)
    },
    calendar: function (bv) {
      var bs = bv || V(), i = D(bs, this).startOf("day"), bu = this.diff(i, "days", true), bt = bu < -6 ? "sameElse" : bu < -1 ? "lastWeek" : bu < 0 ? "lastDay" : bu < 1 ? "sameDay" : bu < 2 ? "nextDay" : bu < 7 ? "nextWeek" : "sameElse";
      return this.format(this.localeData().calendar(bt, this, V(bs)))
    },
    isLeapYear: function () {
      return aU(this.year())
    },
    isDST: function () {
      return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset())
    },
    day: function (bs) {
      var i = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
      if (bs != null) {
        bs = bi(bs, this.localeData());
        return this.add(bs - i, "d")
      } else {
        return i
      }
    },
    month: u("Month", true),
    startOf: function (i) {
      i = a8(i);
      switch (i) {
        case"year":
          this.month(0);
        case"quarter":
        case"month":
          this.date(1);
        case"week":
        case"isoWeek":
        case"day":
          this.hours(0);
        case"hour":
          this.minutes(0);
        case"minute":
          this.seconds(0);
        case"second":
          this.milliseconds(0)
      }
      if (i === "week") {
        this.weekday(0)
      } else {
        if (i === "isoWeek") {
          this.isoWeekday(1)
        }
      }
      if (i === "quarter") {
        this.month(Math.floor(this.month() / 3) * 3)
      }
      return this
    },
    endOf: function (i) {
      i = a8(i);
      if (i === H || i === "millisecond") {
        return this
      }
      return this.startOf(i).add(1, (i === "isoWeek" ? "week" : i)).subtract(1, "ms")
    },
    isAfter: function (bs, i) {
      var bt;
      i = a8(typeof i !== "undefined" ? i : "millisecond");
      if (i === "millisecond") {
        bs = V.isMoment(bs) ? bs : V(bs);
        return +this > +bs
      } else {
        bt = V.isMoment(bs) ? +bs : +V(bs);
        return bt < +this.clone().startOf(i)
      }
    },
    isBefore: function (bs, i) {
      var bt;
      i = a8(typeof i !== "undefined" ? i : "millisecond");
      if (i === "millisecond") {
        bs = V.isMoment(bs) ? bs : V(bs);
        return +this < +bs
      } else {
        bt = V.isMoment(bs) ? +bs : +V(bs);
        return +this.clone().endOf(i) < bt
      }
    },
    isBetween: function (bt, bs, i) {
      return this.isAfter(bt, i) && this.isBefore(bs, i)
    },
    isSame: function (bs, i) {
      var bt;
      i = a8(i || "millisecond");
      if (i === "millisecond") {
        bs = V.isMoment(bs) ? bs : V(bs);
        return +this === +bs
      } else {
        bt = +V(bs);
        return +(this.clone().startOf(i)) <= bt && bt <= +(this.clone().endOf(i))
      }
    },
    min: bp("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function (i) {
      i = V.apply(null, arguments);
      return i < this ? this : i
    }),
    max: bp("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function (i) {
      i = V.apply(null, arguments);
      return i > this ? this : i
    }),
    zone: bp("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779", function (i, bs) {
      if (i != null) {
        if (typeof i !== "string") {
          i = -i
        }
        this.utcOffset(i, bs);
        return this
      } else {
        return -this.utcOffset()
      }
    }),
    utcOffset: function (i, bu) {
      var bt = this._offset || 0, bs;
      if (i != null) {
        if (typeof i === "string") {
          i = aQ(i)
        }
        if (Math.abs(i) < 16) {
          i = i * 60
        }
        if (!this._isUTC && bu) {
          bs = this._dateUtcOffset()
        }
        this._offset = i;
        this._isUTC = true;
        if (bs != null) {
          this.add(bs, "m")
        }
        if (bt !== i) {
          if (!bu || this._changeInProgress) {
            K(this, V.duration(i - bt, "m"), 1, false)
          } else {
            if (!this._changeInProgress) {
              this._changeInProgress = true;
              V.updateOffset(this, true);
              this._changeInProgress = null
            }
          }
        }
        return this
      } else {
        return this._isUTC ? bt : this._dateUtcOffset()
      }
    },
    isLocal: function () {
      return !this._isUTC
    },
    isUtcOffset: function () {
      return this._isUTC
    },
    isUtc: function () {
      return this._isUTC && this._offset === 0
    },
    zoneAbbr: function () {
      return this._isUTC ? "UTC" : ""
    },
    zoneName: function () {
      return this._isUTC ? "Coordinated Universal Time" : ""
    },
    parseZone: function () {
      if (this._tzm) {
        this.utcOffset(this._tzm)
      } else {
        if (typeof this._i === "string") {
          this.utcOffset(aQ(this._i))
        }
      }
      return this
    },
    hasAlignedHourOffset: function (i) {
      if (!i) {
        i = 0
      } else {
        i = V(i).utcOffset()
      }
      return (this.utcOffset() - i) % 60 === 0
    },
    daysInMonth: function () {
      return bh(this.year(), this.month())
    },
    dayOfYear: function (i) {
      var bs = ad((V(this).startOf("day") - V(this).startOf("year")) / 86400000) + 1;
      return i == null ? bs : this.add((i - bs), "d")
    },
    quarter: function (i) {
      return i == null ? Math.ceil((this.month() + 1) / 3) : this.month((i - 1) * 3 + this.month() % 3)
    },
    weekYear: function (i) {
      var bs = F(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
      return i == null ? bs : this.add((i - bs), "y")
    },
    isoWeekYear: function (i) {
      var bs = F(this, 1, 4).year;
      return i == null ? bs : this.add((i - bs), "y")
    },
    week: function (i) {
      var bs = this.localeData().week(this);
      return i == null ? bs : this.add((i - bs) * 7, "d")
    },
    isoWeek: function (i) {
      var bs = F(this, 1, 4).week;
      return i == null ? bs : this.add((i - bs) * 7, "d")
    },
    weekday: function (i) {
      var bs = (this.day() + 7 - this.localeData()._week.dow) % 7;
      return i == null ? bs : this.add(i - bs, "d")
    },
    isoWeekday: function (i) {
      return i == null ? this.day() || 7 : this.day(this.day() % 7 ? i : i - 7)
    },
    isoWeeksInYear: function () {
      return aO(this.year(), 1, 4)
    },
    weeksInYear: function () {
      var i = this.localeData()._week;
      return aO(this.year(), i.dow, i.doy)
    },
    get: function (i) {
      i = a8(i);
      return this[i]()
    },
    set: function (i, bt) {
      var bs;
      if (typeof i === "object") {
        for (bs in i) {
          this.set(bs, i[bs])
        }
      } else {
        i = a8(i);
        if (typeof this[i] === "function") {
          this[i](bt)
        }
      }
      return this
    },
    locale: function (bs) {
      var i;
      if (bs === H) {
        return this._locale._abbr
      } else {
        i = V.localeData(bs);
        if (i != null) {
          this._locale = i
        }
        return this
      }
    },
    lang: bp("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (i) {
      if (i === H) {
        return this.localeData()
      } else {
        return this.locale(i)
      }
    }),
    localeData: function () {
      return this._locale
    },
    _dateUtcOffset: function () {
      return -Math.round(this._d.getTimezoneOffset() / 15) * 15
    }
  });
  function bl(i, bs) {
    var bt;
    if (typeof bs === "string") {
      bs = i.localeData().monthsParse(bs);
      if (typeof bs !== "number") {
        return i
      }
    }
    bt = Math.min(i.date(), bh(i.year(), bs));
    i._d["set" + (i._isUTC ? "UTC" : "") + "Month"](bs, bt);
    return i
  }

  function bq(bs, i) {
    return bs._d["get" + (bs._isUTC ? "UTC" : "") + i]()
  }

  function a1(bs, i, bt) {
    if (i === "Month") {
      return bl(bs, bt)
    } else {
      return bs._d["set" + (bs._isUTC ? "UTC" : "") + i](bt)
    }
  }

  function u(i, bs) {
    return function (bt) {
      if (bt != null) {
        a1(this, i, bt);
        V.updateOffset(this, bs);
        return this
      } else {
        return bq(this, i)
      }
    }
  }

  V.fn.millisecond = V.fn.milliseconds = u("Milliseconds", false);
  V.fn.second = V.fn.seconds = u("Seconds", false);
  V.fn.minute = V.fn.minutes = u("Minutes", false);
  V.fn.hour = V.fn.hours = u("Hours", true);
  V.fn.date = u("Date", true);
  V.fn.dates = bp("dates accessor is deprecated. Use date instead.", u("Date", true));
  V.fn.year = u("FullYear", true);
  V.fn.years = bp("years accessor is deprecated. Use year instead.", u("FullYear", true));
  V.fn.days = V.fn.day;
  V.fn.months = V.fn.month;
  V.fn.weeks = V.fn.week;
  V.fn.isoWeeks = V.fn.isoWeek;
  V.fn.quarters = V.fn.quarter;
  V.fn.toJSON = V.fn.toISOString;
  V.fn.isUTC = V.fn.isUtc;
  function t(i) {
    return i * 400 / 146097
  }

  function bo(i) {
    return i * 146097 / 400
  }

  aJ(V.duration.fn = an.prototype, {
    _bubble: function () {
      var bt = this._milliseconds, by = this._days, i = this._months, bw = this._data, bx, bv, bs, bu = 0;
      bw.milliseconds = bt % 1000;
      bx = q(bt / 1000);
      bw.seconds = bx % 60;
      bv = q(bx / 60);
      bw.minutes = bv % 60;
      bs = q(bv / 60);
      bw.hours = bs % 24;
      by += q(bs / 24);
      bu = q(t(by));
      by -= q(bo(bu));
      i += q(by / 30);
      by %= 30;
      bu += q(i / 12);
      i %= 12;
      bw.days = by;
      bw.months = i;
      bw.years = bu
    },
    abs: function () {
      this._milliseconds = Math.abs(this._milliseconds);
      this._days = Math.abs(this._days);
      this._months = Math.abs(this._months);
      this._data.milliseconds = Math.abs(this._data.milliseconds);
      this._data.seconds = Math.abs(this._data.seconds);
      this._data.minutes = Math.abs(this._data.minutes);
      this._data.hours = Math.abs(this._data.hours);
      this._data.months = Math.abs(this._data.months);
      this._data.years = Math.abs(this._data.years);
      return this
    },
    weeks: function () {
      return q(this.days() / 7)
    },
    valueOf: function () {
      return this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + Q(this._months / 12) * 31536000000
    },
    humanize: function (bs) {
      var i = E(this, !bs, this.localeData());
      if (bs) {
        i = this.localeData().pastFuture(+this, i)
      }
      return this.localeData().postformat(i)
    },
    add: function (i, bt) {
      var bs = V.duration(i, bt);
      this._milliseconds += bs._milliseconds;
      this._days += bs._days;
      this._months += bs._months;
      this._bubble();
      return this
    },
    subtract: function (i, bt) {
      var bs = V.duration(i, bt);
      this._milliseconds -= bs._milliseconds;
      this._days -= bs._days;
      this._months -= bs._months;
      this._bubble();
      return this
    },
    get: function (i) {
      i = a8(i);
      return this[i.toLowerCase() + "s"]()
    },
    as: function (bs) {
      var bt, i;
      bs = a8(bs);
      if (bs === "month" || bs === "year") {
        bt = this._days + this._milliseconds / 86400000;
        i = this._months + t(bt) * 12;
        return bs === "month" ? i : i / 12
      } else {
        bt = this._days + Math.round(bo(this._months / 12));
        switch (bs) {
          case"week":
            return bt / 7 + this._milliseconds / 604800000;
          case"day":
            return bt + this._milliseconds / 86400000;
          case"hour":
            return bt * 24 + this._milliseconds / 3600000;
          case"minute":
            return bt * 24 * 60 + this._milliseconds / 60000;
          case"second":
            return bt * 24 * 60 * 60 + this._milliseconds / 1000;
          case"millisecond":
            return Math.floor(bt * 24 * 60 * 60 * 1000) + this._milliseconds;
          default:
            throw new Error("Unknown unit " + bs)
        }
      }
    },
    lang: V.fn.lang,
    locale: V.fn.locale,
    toIsoString: bp("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", function () {
      return this.toISOString()
    }),
    toISOString: function () {
      var bu = Math.abs(this.years()), i = Math.abs(this.months()), bw = Math.abs(this.days()), bs = Math.abs(this.hours()), bt = Math.abs(this.minutes()), bv = Math.abs(this.seconds() + this.milliseconds() / 1000);
      if (!this.asSeconds()) {
        return "P0D"
      }
      return (this.asSeconds() < 0 ? "-" : "") + "P" + (bu ? bu + "Y" : "") + (i ? i + "M" : "") + (bw ? bw + "D" : "") + ((bs || bt || bv) ? "T" : "") + (bs ? bs + "H" : "") + (bt ? bt + "M" : "") + (bv ? bv + "S" : "")
    },
    localeData: function () {
      return this._locale
    },
    toJSON: function () {
      return this.toISOString()
    }
  });
  V.duration.fn.toString = V.duration.fn.toISOString;
  function ae(i) {
    V.duration.fn[i] = function () {
      return this._data[i]
    }
  }

  for (al in G) {
    if (a6(G, al)) {
      ae(al.toLowerCase())
    }
  }
  V.duration.fn.asMilliseconds = function () {
    return this.as("ms")
  };
  V.duration.fn.asSeconds = function () {
    return this.as("s")
  };
  V.duration.fn.asMinutes = function () {
    return this.as("m")
  };
  V.duration.fn.asHours = function () {
    return this.as("h")
  };
  V.duration.fn.asDays = function () {
    return this.as("d")
  };
  V.duration.fn.asWeeks = function () {
    return this.as("weeks")
  };
  V.duration.fn.asMonths = function () {
    return this.as("M")
  };
  V.duration.fn.asYears = function () {
    return this.as("y")
  };
  V.locale("en", {
    ordinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function (bt) {
      var i = bt % 10, bs = (Q(bt % 100 / 10) === 1) ? "th" : (i === 1) ? "st" : (i === 2) ? "nd" : (i === 3) ? "rd" : "th";
      return bt + bs
    }
  });
  function Y(i) {
    if (typeof ender !== "undefined") {
      return
    }
    aw = bc.moment;
    if (i) {
      bc.moment = bp("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.", V)
    } else {
      bc.moment = V
    }
  }

  if (av) {
    module.exports = V
  } else {
    if (typeof define === "function" && define.amd) {
      define(function (bs, i, bt) {
        if (bt.config && bt.config() && bt.config().noGlobal === true) {
          bc.moment = aw
        }
        return V
      });
      Y(true)
    } else {
      Y()
    }
  }
}).call(this);